// <auto-generated />
using System;
using BankStatInfrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankStatInfrastructure.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20230608220342_DbInit")]
    partial class DbInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("BankStatCore.Models.AccountModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AmountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AmountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BankStatCore.Models.AmountModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrIso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Amounts");
                });

            modelBuilder.Entity("BankStatCore.Models.OperationModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AmountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardMask")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OperationAmountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountID");

                    b.HasIndex("AmountId");

                    b.HasIndex("OperationAmountId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("BankStatCore.Models.ProductInfoModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AmountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AmountId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductInfos");
                });

            modelBuilder.Entity("BankStatCore.Models.ProductModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BankStatCore.Models.AccountModel", b =>
                {
                    b.HasOne("BankStatCore.Models.AmountModel", "Amount")
                        .WithMany()
                        .HasForeignKey("AmountId");

                    b.Navigation("Amount");
                });

            modelBuilder.Entity("BankStatCore.Models.OperationModel", b =>
                {
                    b.HasOne("BankStatCore.Models.AccountModel", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankStatCore.Models.AmountModel", "Amount")
                        .WithMany()
                        .HasForeignKey("AmountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankStatCore.Models.AmountModel", "OperationAmount")
                        .WithMany()
                        .HasForeignKey("OperationAmountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Amount");

                    b.Navigation("OperationAmount");
                });

            modelBuilder.Entity("BankStatCore.Models.ProductInfoModel", b =>
                {
                    b.HasOne("BankStatCore.Models.AccountModel", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankStatCore.Models.AmountModel", "Amount")
                        .WithMany()
                        .HasForeignKey("AmountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankStatCore.Models.ProductModel", "Product")
                        .WithOne("Info")
                        .HasForeignKey("BankStatCore.Models.ProductInfoModel", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Amount");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BankStatCore.Models.ProductModel", b =>
                {
                    b.Navigation("Info")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
